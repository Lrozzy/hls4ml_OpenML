-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config13_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    data_0_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_1_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_2_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_3_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_4_val : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of myproject_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config13_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv10_1FF : STD_LOGIC_VECTOR (9 downto 0) := "0111111111";
    constant ap_const_lv10_200 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv18_1FFFF : STD_LOGIC_VECTOR (17 downto 0) := "011111111111111111";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv18_20000 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";

attribute shreg_extract : string;
    signal exp_table_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_q0 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_table_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_q1 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_table_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_q2 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_table_address3 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_q3 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_table_address4 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_q4 : STD_LOGIC_VECTOR (16 downto 0);
    signal invert_table_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal invert_table_q0 : STD_LOGIC_VECTOR (17 downto 0);
    signal data_4_val_read_reg_996 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal data_3_val_read_reg_1003 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_2_val_read_reg_1008 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_1_val_read_reg_1013 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_0_val_read_reg_1018 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln66_2_fu_222_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln66_2_reg_1023 : STD_LOGIC_VECTOR (15 downto 0);
    signal exp_res_reg_1054 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_reg_1054_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_1_reg_1059 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_1_reg_1059_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_2_reg_1064 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_2_reg_1064_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_3_reg_1069 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_3_reg_1069_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_4_reg_1074 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_4_reg_1074_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln51_3_fu_742_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln51_3_reg_1081 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln255_fu_491_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln255_1_fu_522_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln255_2_fu_553_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln255_3_fu_584_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln255_4_fu_615_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln265_fu_862_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_table_ce4_local : STD_LOGIC;
    signal exp_table_ce3_local : STD_LOGIC;
    signal exp_table_ce2_local : STD_LOGIC;
    signal exp_table_ce1_local : STD_LOGIC;
    signal exp_table_ce0_local : STD_LOGIC;
    signal invert_table_ce0_local : STD_LOGIC;
    signal icmp_ln66_fu_170_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln66_fu_170_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln66_fu_170_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln66_fu_176_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln66_fu_182_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln66_fu_182_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln66_1_fu_190_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln66_1_fu_190_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln66_1_fu_190_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln66_1_fu_196_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln66_1_fu_202_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln66_1_fu_202_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln66_fu_182_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln66_1_fu_202_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln66_2_fu_210_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln66_2_fu_216_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln66_3_fu_230_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln66_3_fu_234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_max_fu_240_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln245_fu_250_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal conv36_i_fu_246_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln245_fu_253_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_fu_259_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_267_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln245_fu_275_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln245_1_fu_293_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln245_1_fu_296_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_2_fu_302_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_310_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln245_2_fu_318_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln245_2_fu_336_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln245_2_fu_339_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_4_fu_345_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_353_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln245_4_fu_361_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln245_3_fu_379_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln245_3_fu_382_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_6_fu_388_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_396_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln245_6_fu_404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln245_4_fu_422_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln245_4_fu_425_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_8_fu_431_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_439_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln245_8_fu_447_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln245_fu_281_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln245_1_fu_287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln245_fu_465_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_s_fu_473_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln245_1_fu_483_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln245_1_fu_324_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln245_3_fu_330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln245_2_fu_496_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_10_fu_504_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln245_3_fu_514_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln245_2_fu_367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln245_5_fu_373_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln245_4_fu_527_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_11_fu_535_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln245_5_fu_545_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln245_3_fu_410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln245_7_fu_416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln245_6_fu_558_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_12_fu_566_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln245_7_fu_576_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln245_4_fu_453_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln245_9_fu_459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln245_8_fu_589_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_13_fu_597_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln245_9_fu_607_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln245_1_fu_624_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln245_fu_620_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln51_fu_636_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_15_fu_642_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln245_3_fu_632_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln245_2_fu_628_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln51_1_fu_658_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_16_fu_664_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln51_fu_650_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln51_1_fu_672_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln51_1_fu_684_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln51_fu_680_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln51_3_fu_694_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln51_2_fu_688_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_17_fu_700_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_708_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln51_fu_716_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln51_fu_722_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln51_1_fu_728_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln51_2_fu_734_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln249_fu_750_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln51_2_fu_753_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln51_fu_756_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln51_5_fu_764_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln51_4_fu_759_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_19_fu_770_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_778_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln51_2_fu_786_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln51_3_fu_798_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln51_4_fu_810_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln51_1_fu_792_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln51_5_fu_816_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_828_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln51_2_fu_804_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln51_fu_822_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln51_4_fu_838_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln51_5_fu_846_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_fu_854_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln268_fu_874_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln268_fu_867_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln268_fu_874_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln268_fu_874_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln268_1_fu_893_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln268_1_fu_893_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln268_1_fu_893_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln268_2_fu_912_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln268_2_fu_912_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln268_2_fu_912_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln268_3_fu_931_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln268_3_fu_931_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln268_3_fu_931_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln268_4_fu_950_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln268_4_fu_950_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln268_4_fu_950_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal ap_ce_reg : STD_LOGIC;
    signal data_0_val_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_1_val_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_2_val_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_3_val_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_4_val_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_return_0_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_return_1_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_return_2_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_return_3_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_return_4_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln268_1_fu_893_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln268_2_fu_912_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln268_3_fu_931_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln268_4_fu_950_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln268_fu_874_p10 : STD_LOGIC_VECTOR (25 downto 0);

    component myproject_mul_18s_17ns_26_1_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (16 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config13_s_exp_table_ROM_bkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address2 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address3 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address4 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component myproject_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config13_s_invert_table_Rcud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;



begin
    exp_table_U : component myproject_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config13_s_exp_table_ROM_bkb
    generic map (
        DataWidth => 17,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => exp_table_address0,
        ce0 => exp_table_ce0_local,
        q0 => exp_table_q0,
        address1 => exp_table_address1,
        ce1 => exp_table_ce1_local,
        q1 => exp_table_q1,
        address2 => exp_table_address2,
        ce2 => exp_table_ce2_local,
        q2 => exp_table_q2,
        address3 => exp_table_address3,
        ce3 => exp_table_ce3_local,
        q3 => exp_table_q3,
        address4 => exp_table_address4,
        ce4 => exp_table_ce4_local,
        q4 => exp_table_q4);

    invert_table_U : component myproject_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config13_s_invert_table_Rcud
    generic map (
        DataWidth => 18,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => invert_table_address0,
        ce0 => invert_table_ce0_local,
        q0 => invert_table_q0);

    mul_18s_17ns_26_1_0_U1060 : component myproject_mul_18s_17ns_26_1_0
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln268_fu_874_p0,
        din1 => mul_ln268_fu_874_p1,
        dout => mul_ln268_fu_874_p2);

    mul_18s_17ns_26_1_0_U1061 : component myproject_mul_18s_17ns_26_1_0
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln268_1_fu_893_p0,
        din1 => mul_ln268_1_fu_893_p1,
        dout => mul_ln268_1_fu_893_p2);

    mul_18s_17ns_26_1_0_U1062 : component myproject_mul_18s_17ns_26_1_0
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln268_2_fu_912_p0,
        din1 => mul_ln268_2_fu_912_p1,
        dout => mul_ln268_2_fu_912_p2);

    mul_18s_17ns_26_1_0_U1063 : component myproject_mul_18s_17ns_26_1_0
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln268_3_fu_931_p0,
        din1 => mul_ln268_3_fu_931_p1,
        dout => mul_ln268_3_fu_931_p2);

    mul_18s_17ns_26_1_0_U1064 : component myproject_mul_18s_17ns_26_1_0
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln268_4_fu_950_p0,
        din1 => mul_ln268_4_fu_950_p1,
        dout => mul_ln268_4_fu_950_p2);





    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                ap_return_0_int_reg <= mul_ln268_fu_874_p2(25 downto 10);
                ap_return_1_int_reg <= mul_ln268_1_fu_893_p2(25 downto 10);
                ap_return_2_int_reg <= mul_ln268_2_fu_912_p2(25 downto 10);
                ap_return_3_int_reg <= mul_ln268_3_fu_931_p2(25 downto 10);
                ap_return_4_int_reg <= mul_ln268_4_fu_950_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                data_0_val_int_reg <= data_0_val;
                data_1_val_int_reg <= data_1_val;
                data_2_val_int_reg <= data_2_val;
                data_3_val_int_reg <= data_3_val;
                data_4_val_int_reg <= data_4_val;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then
                data_0_val_read_reg_1018 <= data_0_val_int_reg;
                data_1_val_read_reg_1013 <= data_1_val_int_reg;
                data_2_val_read_reg_1008 <= data_2_val_int_reg;
                data_3_val_read_reg_1003 <= data_3_val_int_reg;
                data_4_val_read_reg_996 <= data_4_val_int_reg;
                exp_res_1_reg_1059 <= exp_table_q3;
                exp_res_1_reg_1059_pp0_iter3_reg <= exp_res_1_reg_1059;
                exp_res_2_reg_1064 <= exp_table_q2;
                exp_res_2_reg_1064_pp0_iter3_reg <= exp_res_2_reg_1064;
                exp_res_3_reg_1069 <= exp_table_q1;
                exp_res_3_reg_1069_pp0_iter3_reg <= exp_res_3_reg_1069;
                exp_res_4_reg_1074 <= exp_table_q0;
                exp_res_4_reg_1074_pp0_iter3_reg <= exp_res_4_reg_1074;
                exp_res_reg_1054 <= exp_table_q4;
                exp_res_reg_1054_pp0_iter3_reg <= exp_res_reg_1054;
                select_ln51_3_reg_1081 <= select_ln51_3_fu_742_p3;
                select_ln66_2_reg_1023 <= select_ln66_2_fu_222_p3;
            end if;
        end if;
    end process;
    add_ln51_1_fu_658_p2 <= std_logic_vector(unsigned(zext_ln245_3_fu_632_p1) + unsigned(zext_ln245_2_fu_628_p1));
    add_ln51_2_fu_688_p2 <= std_logic_vector(signed(select_ln51_1_fu_672_p3) + signed(select_ln51_fu_650_p3));
    add_ln51_3_fu_694_p2 <= std_logic_vector(signed(sext_ln51_1_fu_684_p1) + signed(sext_ln51_fu_680_p1));
    add_ln51_4_fu_759_p2 <= std_logic_vector(unsigned(zext_ln249_fu_750_p1) + unsigned(select_ln51_3_reg_1081));
    add_ln51_5_fu_764_p2 <= std_logic_vector(signed(sext_ln51_2_fu_753_p1) + signed(zext_ln51_fu_756_p1));
    add_ln51_fu_636_p2 <= std_logic_vector(unsigned(zext_ln245_1_fu_624_p1) + unsigned(zext_ln245_fu_620_p1));
    and_ln245_1_fu_324_p2 <= (xor_ln245_2_fu_318_p2 and tmp_3_fu_310_p3);
    and_ln245_2_fu_367_p2 <= (xor_ln245_4_fu_361_p2 and tmp_5_fu_353_p3);
    and_ln245_3_fu_410_p2 <= (xor_ln245_6_fu_404_p2 and tmp_7_fu_396_p3);
    and_ln245_4_fu_453_p2 <= (xor_ln245_8_fu_447_p2 and tmp_9_fu_439_p3);
    and_ln245_fu_281_p2 <= (xor_ln245_fu_275_p2 and tmp_1_fu_267_p3);
    and_ln51_1_fu_792_p2 <= (xor_ln51_2_fu_786_p2 and tmp_20_fu_778_p3);
    and_ln51_2_fu_804_p2 <= (xor_ln51_3_fu_798_p2 and tmp_19_fu_770_p3);
    and_ln51_fu_722_p2 <= (xor_ln51_fu_716_p2 and tmp_18_fu_708_p3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_0_assign_proc : process(mul_ln268_fu_874_p2, ap_ce_reg, ap_return_0_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_0 <= ap_return_0_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_0 <= mul_ln268_fu_874_p2(25 downto 10);
        else 
            ap_return_0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_return_1_assign_proc : process(mul_ln268_1_fu_893_p2, ap_ce_reg, ap_return_1_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_1 <= ap_return_1_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_1 <= mul_ln268_1_fu_893_p2(25 downto 10);
        else 
            ap_return_1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_return_2_assign_proc : process(mul_ln268_2_fu_912_p2, ap_ce_reg, ap_return_2_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_2 <= ap_return_2_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_2 <= mul_ln268_2_fu_912_p2(25 downto 10);
        else 
            ap_return_2 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_return_3_assign_proc : process(mul_ln268_3_fu_931_p2, ap_ce_reg, ap_return_3_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_3 <= ap_return_3_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_3 <= mul_ln268_3_fu_931_p2(25 downto 10);
        else 
            ap_return_3 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_return_4_assign_proc : process(mul_ln268_4_fu_950_p2, ap_ce_reg, ap_return_4_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_4 <= ap_return_4_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_4 <= mul_ln268_4_fu_950_p2(25 downto 10);
        else 
            ap_return_4 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

        conv36_i_fu_246_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_max_fu_240_p3),17));

    empty_fu_854_p3 <= 
        select_ln51_4_fu_838_p3 when (or_ln51_fu_822_p2(0) = '1') else 
        select_ln51_5_fu_846_p3;
    exp_table_address0 <= zext_ln255_4_fu_615_p1(10 - 1 downto 0);
    exp_table_address1 <= zext_ln255_3_fu_584_p1(10 - 1 downto 0);
    exp_table_address2 <= zext_ln255_2_fu_553_p1(10 - 1 downto 0);
    exp_table_address3 <= zext_ln255_1_fu_522_p1(10 - 1 downto 0);
    exp_table_address4 <= zext_ln255_fu_491_p1(10 - 1 downto 0);

    exp_table_ce0_local_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            exp_table_ce0_local <= ap_const_logic_1;
        else 
            exp_table_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce1_local_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            exp_table_ce1_local <= ap_const_logic_1;
        else 
            exp_table_ce1_local <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce2_local_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            exp_table_ce2_local <= ap_const_logic_1;
        else 
            exp_table_ce2_local <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce3_local_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            exp_table_ce3_local <= ap_const_logic_1;
        else 
            exp_table_ce3_local <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce4_local_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            exp_table_ce4_local <= ap_const_logic_1;
        else 
            exp_table_ce4_local <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln66_1_fu_190_p0 <= data_2_val_int_reg;
    icmp_ln66_1_fu_190_p1 <= data_3_val_int_reg;
    icmp_ln66_1_fu_190_p2 <= "1" when (signed(icmp_ln66_1_fu_190_p0) < signed(icmp_ln66_1_fu_190_p1)) else "0";
    icmp_ln66_2_fu_210_p2 <= "1" when (signed(select_ln66_fu_182_p3) < signed(select_ln66_1_fu_202_p3)) else "0";
    icmp_ln66_3_fu_230_p2 <= "1" when (signed(select_ln66_2_reg_1023) < signed(data_4_val_read_reg_996)) else "0";
    icmp_ln66_fu_170_p0 <= data_0_val_int_reg;
    icmp_ln66_fu_170_p1 <= data_1_val_int_reg;
    icmp_ln66_fu_170_p2 <= "1" when (signed(icmp_ln66_fu_170_p0) < signed(icmp_ln66_fu_170_p1)) else "0";
    invert_table_address0 <= zext_ln265_fu_862_p1(10 - 1 downto 0);

    invert_table_ce0_local_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            invert_table_ce0_local <= ap_const_logic_1;
        else 
            invert_table_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln268_1_fu_893_p0 <= sext_ln268_fu_867_p1(18 - 1 downto 0);
    mul_ln268_1_fu_893_p1 <= mul_ln268_1_fu_893_p10(17 - 1 downto 0);
    mul_ln268_1_fu_893_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_1_reg_1059_pp0_iter3_reg),26));
    mul_ln268_2_fu_912_p0 <= sext_ln268_fu_867_p1(18 - 1 downto 0);
    mul_ln268_2_fu_912_p1 <= mul_ln268_2_fu_912_p10(17 - 1 downto 0);
    mul_ln268_2_fu_912_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_2_reg_1064_pp0_iter3_reg),26));
    mul_ln268_3_fu_931_p0 <= sext_ln268_fu_867_p1(18 - 1 downto 0);
    mul_ln268_3_fu_931_p1 <= mul_ln268_3_fu_931_p10(17 - 1 downto 0);
    mul_ln268_3_fu_931_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_3_reg_1069_pp0_iter3_reg),26));
    mul_ln268_4_fu_950_p0 <= sext_ln268_fu_867_p1(18 - 1 downto 0);
    mul_ln268_4_fu_950_p1 <= mul_ln268_4_fu_950_p10(17 - 1 downto 0);
    mul_ln268_4_fu_950_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_4_reg_1074_pp0_iter3_reg),26));
    mul_ln268_fu_874_p0 <= sext_ln268_fu_867_p1(18 - 1 downto 0);
    mul_ln268_fu_874_p1 <= mul_ln268_fu_874_p10(17 - 1 downto 0);
    mul_ln268_fu_874_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_reg_1054_pp0_iter3_reg),26));
    or_ln51_fu_822_p2 <= (xor_ln51_5_fu_816_p2 or and_ln51_1_fu_792_p2);
    select_ln245_1_fu_483_p3 <= 
        select_ln245_fu_465_p3 when (xor_ln245_1_fu_287_p2(0) = '1') else 
        tmp_s_fu_473_p4;
    select_ln245_2_fu_496_p3 <= 
        ap_const_lv10_1FF when (and_ln245_1_fu_324_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln245_3_fu_514_p3 <= 
        select_ln245_2_fu_496_p3 when (xor_ln245_3_fu_330_p2(0) = '1') else 
        tmp_10_fu_504_p4;
    select_ln245_4_fu_527_p3 <= 
        ap_const_lv10_1FF when (and_ln245_2_fu_367_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln245_5_fu_545_p3 <= 
        select_ln245_4_fu_527_p3 when (xor_ln245_5_fu_373_p2(0) = '1') else 
        tmp_11_fu_535_p4;
    select_ln245_6_fu_558_p3 <= 
        ap_const_lv10_1FF when (and_ln245_3_fu_410_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln245_7_fu_576_p3 <= 
        select_ln245_6_fu_558_p3 when (xor_ln245_7_fu_416_p2(0) = '1') else 
        tmp_12_fu_566_p4;
    select_ln245_8_fu_589_p3 <= 
        ap_const_lv10_1FF when (and_ln245_4_fu_453_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln245_9_fu_607_p3 <= 
        select_ln245_8_fu_589_p3 when (xor_ln245_9_fu_459_p2(0) = '1') else 
        tmp_13_fu_597_p4;
    select_ln245_fu_465_p3 <= 
        ap_const_lv10_1FF when (and_ln245_fu_281_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln51_1_fu_672_p3 <= 
        ap_const_lv18_1FFFF when (tmp_16_fu_664_p3(0) = '1') else 
        add_ln51_1_fu_658_p2;
    select_ln51_2_fu_734_p3 <= 
        ap_const_lv18_1FFFF when (and_ln51_fu_722_p2(0) = '1') else 
        ap_const_lv18_20000;
    select_ln51_3_fu_742_p3 <= 
        select_ln51_2_fu_734_p3 when (xor_ln51_1_fu_728_p2(0) = '1') else 
        add_ln51_2_fu_688_p2;
    select_ln51_4_fu_838_p3 <= 
        ap_const_lv10_1FF when (xor_ln51_4_fu_810_p2(0) = '1') else 
        tmp_14_fu_828_p4;
    select_ln51_5_fu_846_p3 <= 
        ap_const_lv10_200 when (and_ln51_2_fu_804_p2(0) = '1') else 
        tmp_14_fu_828_p4;
    select_ln51_fu_650_p3 <= 
        ap_const_lv18_1FFFF when (tmp_15_fu_642_p3(0) = '1') else 
        add_ln51_fu_636_p2;
    select_ln66_1_fu_202_p1 <= data_2_val_int_reg;
    select_ln66_1_fu_202_p2 <= data_3_val_int_reg;
    select_ln66_1_fu_202_p3 <= 
        select_ln66_1_fu_202_p1 when (xor_ln66_1_fu_196_p2(0) = '1') else 
        select_ln66_1_fu_202_p2;
    select_ln66_2_fu_222_p3 <= 
        select_ln66_fu_182_p3 when (xor_ln66_2_fu_216_p2(0) = '1') else 
        select_ln66_1_fu_202_p3;
    select_ln66_fu_182_p1 <= data_0_val_int_reg;
    select_ln66_fu_182_p2 <= data_1_val_int_reg;
    select_ln66_fu_182_p3 <= 
        select_ln66_fu_182_p1 when (xor_ln66_fu_176_p2(0) = '1') else 
        select_ln66_fu_182_p2;
        sext_ln245_1_fu_293_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_1_val_read_reg_1013),17));

        sext_ln245_2_fu_336_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_2_val_read_reg_1008),17));

        sext_ln245_3_fu_379_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_3_val_read_reg_1003),17));

        sext_ln245_4_fu_422_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_4_val_read_reg_996),17));

        sext_ln245_fu_250_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_0_val_read_reg_1018),17));

        sext_ln268_fu_867_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(invert_table_q0),26));

        sext_ln51_1_fu_684_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln51_1_fu_672_p3),19));

        sext_ln51_2_fu_753_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln51_3_reg_1081),19));

        sext_ln51_fu_680_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln51_fu_650_p3),19));

    sub_ln245_1_fu_296_p2 <= std_logic_vector(signed(sext_ln245_1_fu_293_p1) - signed(conv36_i_fu_246_p1));
    sub_ln245_2_fu_339_p2 <= std_logic_vector(signed(sext_ln245_2_fu_336_p1) - signed(conv36_i_fu_246_p1));
    sub_ln245_3_fu_382_p2 <= std_logic_vector(signed(sext_ln245_3_fu_379_p1) - signed(conv36_i_fu_246_p1));
    sub_ln245_4_fu_425_p2 <= std_logic_vector(signed(sext_ln245_4_fu_422_p1) - signed(conv36_i_fu_246_p1));
    sub_ln245_fu_253_p2 <= std_logic_vector(signed(sext_ln245_fu_250_p1) - signed(conv36_i_fu_246_p1));
    tmp_10_fu_504_p4 <= sub_ln245_1_fu_296_p2(15 downto 6);
    tmp_11_fu_535_p4 <= sub_ln245_2_fu_339_p2(15 downto 6);
    tmp_12_fu_566_p4 <= sub_ln245_3_fu_382_p2(15 downto 6);
    tmp_13_fu_597_p4 <= sub_ln245_4_fu_425_p2(15 downto 6);
    tmp_14_fu_828_p4 <= add_ln51_4_fu_759_p2(17 downto 8);
    tmp_15_fu_642_p3 <= add_ln51_fu_636_p2(17 downto 17);
    tmp_16_fu_664_p3 <= add_ln51_1_fu_658_p2(17 downto 17);
    tmp_17_fu_700_p3 <= add_ln51_3_fu_694_p2(18 downto 18);
    tmp_18_fu_708_p3 <= add_ln51_2_fu_688_p2(17 downto 17);
    tmp_19_fu_770_p3 <= add_ln51_5_fu_764_p2(18 downto 18);
    tmp_1_fu_267_p3 <= sub_ln245_fu_253_p2(15 downto 15);
    tmp_20_fu_778_p3 <= add_ln51_4_fu_759_p2(17 downto 17);
    tmp_2_fu_302_p3 <= sub_ln245_1_fu_296_p2(16 downto 16);
    tmp_3_fu_310_p3 <= sub_ln245_1_fu_296_p2(15 downto 15);
    tmp_4_fu_345_p3 <= sub_ln245_2_fu_339_p2(16 downto 16);
    tmp_5_fu_353_p3 <= sub_ln245_2_fu_339_p2(15 downto 15);
    tmp_6_fu_388_p3 <= sub_ln245_3_fu_382_p2(16 downto 16);
    tmp_7_fu_396_p3 <= sub_ln245_3_fu_382_p2(15 downto 15);
    tmp_8_fu_431_p3 <= sub_ln245_4_fu_425_p2(16 downto 16);
    tmp_9_fu_439_p3 <= sub_ln245_4_fu_425_p2(15 downto 15);
    tmp_fu_259_p3 <= sub_ln245_fu_253_p2(16 downto 16);
    tmp_s_fu_473_p4 <= sub_ln245_fu_253_p2(15 downto 6);
    x_max_fu_240_p3 <= 
        select_ln66_2_reg_1023 when (xor_ln66_3_fu_234_p2(0) = '1') else 
        data_4_val_read_reg_996;
    xor_ln245_1_fu_287_p2 <= (tmp_fu_259_p3 xor tmp_1_fu_267_p3);
    xor_ln245_2_fu_318_p2 <= (tmp_2_fu_302_p3 xor ap_const_lv1_1);
    xor_ln245_3_fu_330_p2 <= (tmp_3_fu_310_p3 xor tmp_2_fu_302_p3);
    xor_ln245_4_fu_361_p2 <= (tmp_4_fu_345_p3 xor ap_const_lv1_1);
    xor_ln245_5_fu_373_p2 <= (tmp_5_fu_353_p3 xor tmp_4_fu_345_p3);
    xor_ln245_6_fu_404_p2 <= (tmp_6_fu_388_p3 xor ap_const_lv1_1);
    xor_ln245_7_fu_416_p2 <= (tmp_7_fu_396_p3 xor tmp_6_fu_388_p3);
    xor_ln245_8_fu_447_p2 <= (tmp_8_fu_431_p3 xor ap_const_lv1_1);
    xor_ln245_9_fu_459_p2 <= (tmp_9_fu_439_p3 xor tmp_8_fu_431_p3);
    xor_ln245_fu_275_p2 <= (tmp_fu_259_p3 xor ap_const_lv1_1);
    xor_ln51_1_fu_728_p2 <= (tmp_18_fu_708_p3 xor tmp_17_fu_700_p3);
    xor_ln51_2_fu_786_p2 <= (tmp_19_fu_770_p3 xor ap_const_lv1_1);
    xor_ln51_3_fu_798_p2 <= (tmp_20_fu_778_p3 xor ap_const_lv1_1);
    xor_ln51_4_fu_810_p2 <= (tmp_20_fu_778_p3 xor tmp_19_fu_770_p3);
    xor_ln51_5_fu_816_p2 <= (xor_ln51_4_fu_810_p2 xor ap_const_lv1_1);
    xor_ln51_fu_716_p2 <= (tmp_17_fu_700_p3 xor ap_const_lv1_1);
    xor_ln66_1_fu_196_p2 <= (icmp_ln66_1_fu_190_p2 xor ap_const_lv1_1);
    xor_ln66_2_fu_216_p2 <= (icmp_ln66_2_fu_210_p2 xor ap_const_lv1_1);
    xor_ln66_3_fu_234_p2 <= (icmp_ln66_3_fu_230_p2 xor ap_const_lv1_1);
    xor_ln66_fu_176_p2 <= (icmp_ln66_fu_170_p2 xor ap_const_lv1_1);
    zext_ln245_1_fu_624_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_table_q3),18));
    zext_ln245_2_fu_628_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_table_q2),18));
    zext_ln245_3_fu_632_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_table_q1),18));
    zext_ln245_fu_620_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_table_q4),18));
    zext_ln249_fu_750_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_4_reg_1074),18));
    zext_ln255_1_fu_522_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln245_3_fu_514_p3),64));
    zext_ln255_2_fu_553_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln245_5_fu_545_p3),64));
    zext_ln255_3_fu_584_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln245_7_fu_576_p3),64));
    zext_ln255_4_fu_615_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln245_9_fu_607_p3),64));
    zext_ln255_fu_491_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln245_1_fu_483_p3),64));
    zext_ln265_fu_862_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_fu_854_p3),64));
    zext_ln51_fu_756_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_4_reg_1074),19));
end behav;
