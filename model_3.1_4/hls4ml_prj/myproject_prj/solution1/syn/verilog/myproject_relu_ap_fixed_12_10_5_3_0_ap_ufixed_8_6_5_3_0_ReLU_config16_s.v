// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_relu_ap_fixed_12_10_5_3_0_ap_ufixed_8_6_5_3_0_ReLU_config16_s (
        ap_ready,
        data_0_val,
        data_5_val,
        data_11_val,
        data_12_val,
        data_13_val,
        data_17_val,
        data_21_val,
        data_28_val,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_rst
);


output   ap_ready;
input  [11:0] data_0_val;
input  [11:0] data_5_val;
input  [11:0] data_11_val;
input  [11:0] data_12_val;
input  [11:0] data_13_val;
input  [11:0] data_17_val;
input  [11:0] data_21_val;
input  [11:0] data_28_val;
output  [7:0] ap_return_0;
output  [7:0] ap_return_1;
output  [7:0] ap_return_2;
output  [7:0] ap_return_3;
output  [7:0] ap_return_4;
output  [7:0] ap_return_5;
output  [7:0] ap_return_6;
output  [7:0] ap_return_7;
input   ap_rst;

wire   [0:0] icmp_ln45_fu_80_p2;
wire   [7:0] trunc_ln46_fu_86_p1;
wire   [0:0] icmp_ln45_1_fu_98_p2;
wire   [7:0] trunc_ln46_1_fu_104_p1;
wire   [0:0] icmp_ln45_2_fu_116_p2;
wire   [7:0] trunc_ln46_2_fu_122_p1;
wire   [0:0] icmp_ln45_3_fu_134_p2;
wire   [7:0] trunc_ln46_3_fu_140_p1;
wire   [0:0] icmp_ln45_4_fu_152_p2;
wire   [7:0] trunc_ln46_4_fu_158_p1;
wire   [0:0] icmp_ln45_5_fu_170_p2;
wire   [7:0] trunc_ln46_5_fu_176_p1;
wire   [0:0] icmp_ln45_6_fu_188_p2;
wire   [7:0] trunc_ln46_6_fu_194_p1;
wire   [0:0] icmp_ln45_7_fu_206_p2;
wire   [7:0] trunc_ln46_7_fu_212_p1;
wire   [7:0] select_ln45_fu_90_p3;
wire   [7:0] select_ln45_1_fu_108_p3;
wire   [7:0] select_ln45_2_fu_126_p3;
wire   [7:0] select_ln45_3_fu_144_p3;
wire   [7:0] select_ln45_4_fu_162_p3;
wire   [7:0] select_ln45_5_fu_180_p3;
wire   [7:0] select_ln45_6_fu_198_p3;
wire   [7:0] select_ln45_7_fu_216_p3;

assign ap_ready = 1'b1;

assign select_ln45_1_fu_108_p3 = ((icmp_ln45_1_fu_98_p2[0:0] == 1'b1) ? trunc_ln46_1_fu_104_p1 : 8'd0);

assign select_ln45_2_fu_126_p3 = ((icmp_ln45_2_fu_116_p2[0:0] == 1'b1) ? trunc_ln46_2_fu_122_p1 : 8'd0);

assign select_ln45_3_fu_144_p3 = ((icmp_ln45_3_fu_134_p2[0:0] == 1'b1) ? trunc_ln46_3_fu_140_p1 : 8'd0);

assign select_ln45_4_fu_162_p3 = ((icmp_ln45_4_fu_152_p2[0:0] == 1'b1) ? trunc_ln46_4_fu_158_p1 : 8'd0);

assign select_ln45_5_fu_180_p3 = ((icmp_ln45_5_fu_170_p2[0:0] == 1'b1) ? trunc_ln46_5_fu_176_p1 : 8'd0);

assign select_ln45_6_fu_198_p3 = ((icmp_ln45_6_fu_188_p2[0:0] == 1'b1) ? trunc_ln46_6_fu_194_p1 : 8'd0);

assign select_ln45_7_fu_216_p3 = ((icmp_ln45_7_fu_206_p2[0:0] == 1'b1) ? trunc_ln46_7_fu_212_p1 : 8'd0);

assign select_ln45_fu_90_p3 = ((icmp_ln45_fu_80_p2[0:0] == 1'b1) ? trunc_ln46_fu_86_p1 : 8'd0);

assign trunc_ln46_1_fu_104_p1 = data_5_val[7:0];

assign trunc_ln46_2_fu_122_p1 = data_11_val[7:0];

assign trunc_ln46_3_fu_140_p1 = data_12_val[7:0];

assign trunc_ln46_4_fu_158_p1 = data_13_val[7:0];

assign trunc_ln46_5_fu_176_p1 = data_17_val[7:0];

assign trunc_ln46_6_fu_194_p1 = data_21_val[7:0];

assign trunc_ln46_7_fu_212_p1 = data_28_val[7:0];

assign trunc_ln46_fu_86_p1 = data_0_val[7:0];

assign ap_return_0 = select_ln45_fu_90_p3;

assign ap_return_1 = select_ln45_1_fu_108_p3;

assign ap_return_2 = select_ln45_2_fu_126_p3;

assign ap_return_3 = select_ln45_3_fu_144_p3;

assign ap_return_4 = select_ln45_4_fu_162_p3;

assign ap_return_5 = select_ln45_5_fu_180_p3;

assign ap_return_6 = select_ln45_6_fu_198_p3;

assign ap_return_7 = select_ln45_7_fu_216_p3;

assign icmp_ln45_1_fu_98_p2 = (($signed(data_5_val) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_2_fu_116_p2 = (($signed(data_11_val) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_3_fu_134_p2 = (($signed(data_12_val) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_4_fu_152_p2 = (($signed(data_13_val) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_5_fu_170_p2 = (($signed(data_17_val) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_6_fu_188_p2 = (($signed(data_21_val) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_7_fu_206_p2 = (($signed(data_28_val) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_fu_80_p2 = (($signed(data_0_val) > $signed(12'd0)) ? 1'b1 : 1'b0);

endmodule //myproject_relu_ap_fixed_12_10_5_3_0_ap_ufixed_8_6_5_3_0_ReLU_config16_s
