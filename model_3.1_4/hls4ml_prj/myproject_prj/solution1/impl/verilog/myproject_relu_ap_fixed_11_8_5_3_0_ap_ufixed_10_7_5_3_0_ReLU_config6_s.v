// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_relu_ap_fixed_11_8_5_3_0_ap_ufixed_10_7_5_3_0_ReLU_config6_s (
        ap_ready,
        data_0_val,
        data_1_val,
        data_6_val,
        data_7_val,
        data_22_val,
        data_49_val,
        data_55_val,
        data_59_val,
        data_63_val,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_rst
);


output   ap_ready;
input  [10:0] data_0_val;
input  [10:0] data_1_val;
input  [10:0] data_6_val;
input  [10:0] data_7_val;
input  [10:0] data_22_val;
input  [10:0] data_49_val;
input  [10:0] data_55_val;
input  [10:0] data_59_val;
input  [10:0] data_63_val;
output  [9:0] ap_return_0;
output  [9:0] ap_return_1;
output  [9:0] ap_return_2;
output  [9:0] ap_return_3;
output  [9:0] ap_return_4;
output  [9:0] ap_return_5;
output  [9:0] ap_return_6;
output  [9:0] ap_return_7;
output  [9:0] ap_return_8;
input   ap_rst;

wire   [0:0] icmp_ln45_fu_88_p2;
wire   [9:0] trunc_ln46_fu_94_p1;
wire   [0:0] icmp_ln45_11_fu_106_p2;
wire   [9:0] trunc_ln46_11_fu_112_p1;
wire   [0:0] icmp_ln45_12_fu_124_p2;
wire   [9:0] trunc_ln46_12_fu_130_p1;
wire   [0:0] icmp_ln45_13_fu_142_p2;
wire   [9:0] trunc_ln46_13_fu_148_p1;
wire   [0:0] icmp_ln45_14_fu_160_p2;
wire   [9:0] trunc_ln46_14_fu_166_p1;
wire   [0:0] icmp_ln45_15_fu_178_p2;
wire   [9:0] trunc_ln46_15_fu_184_p1;
wire   [0:0] icmp_ln45_16_fu_196_p2;
wire   [9:0] trunc_ln46_16_fu_202_p1;
wire   [0:0] icmp_ln45_17_fu_214_p2;
wire   [9:0] trunc_ln46_17_fu_220_p1;
wire   [0:0] icmp_ln45_18_fu_232_p2;
wire   [9:0] trunc_ln46_18_fu_238_p1;
wire   [9:0] select_ln45_fu_98_p3;
wire   [9:0] select_ln45_11_fu_116_p3;
wire   [9:0] select_ln45_12_fu_134_p3;
wire   [9:0] select_ln45_13_fu_152_p3;
wire   [9:0] select_ln45_14_fu_170_p3;
wire   [9:0] select_ln45_15_fu_188_p3;
wire   [9:0] select_ln45_16_fu_206_p3;
wire   [9:0] select_ln45_17_fu_224_p3;
wire   [9:0] select_ln45_18_fu_242_p3;

assign ap_ready = 1'b1;

assign select_ln45_11_fu_116_p3 = ((icmp_ln45_11_fu_106_p2[0:0] == 1'b1) ? trunc_ln46_11_fu_112_p1 : 10'd0);

assign select_ln45_12_fu_134_p3 = ((icmp_ln45_12_fu_124_p2[0:0] == 1'b1) ? trunc_ln46_12_fu_130_p1 : 10'd0);

assign select_ln45_13_fu_152_p3 = ((icmp_ln45_13_fu_142_p2[0:0] == 1'b1) ? trunc_ln46_13_fu_148_p1 : 10'd0);

assign select_ln45_14_fu_170_p3 = ((icmp_ln45_14_fu_160_p2[0:0] == 1'b1) ? trunc_ln46_14_fu_166_p1 : 10'd0);

assign select_ln45_15_fu_188_p3 = ((icmp_ln45_15_fu_178_p2[0:0] == 1'b1) ? trunc_ln46_15_fu_184_p1 : 10'd0);

assign select_ln45_16_fu_206_p3 = ((icmp_ln45_16_fu_196_p2[0:0] == 1'b1) ? trunc_ln46_16_fu_202_p1 : 10'd0);

assign select_ln45_17_fu_224_p3 = ((icmp_ln45_17_fu_214_p2[0:0] == 1'b1) ? trunc_ln46_17_fu_220_p1 : 10'd0);

assign select_ln45_18_fu_242_p3 = ((icmp_ln45_18_fu_232_p2[0:0] == 1'b1) ? trunc_ln46_18_fu_238_p1 : 10'd0);

assign select_ln45_fu_98_p3 = ((icmp_ln45_fu_88_p2[0:0] == 1'b1) ? trunc_ln46_fu_94_p1 : 10'd0);

assign trunc_ln46_11_fu_112_p1 = data_1_val[9:0];

assign trunc_ln46_12_fu_130_p1 = data_6_val[9:0];

assign trunc_ln46_13_fu_148_p1 = data_7_val[9:0];

assign trunc_ln46_14_fu_166_p1 = data_22_val[9:0];

assign trunc_ln46_15_fu_184_p1 = data_49_val[9:0];

assign trunc_ln46_16_fu_202_p1 = data_55_val[9:0];

assign trunc_ln46_17_fu_220_p1 = data_59_val[9:0];

assign trunc_ln46_18_fu_238_p1 = data_63_val[9:0];

assign trunc_ln46_fu_94_p1 = data_0_val[9:0];

assign ap_return_0 = select_ln45_fu_98_p3;

assign ap_return_1 = select_ln45_11_fu_116_p3;

assign ap_return_2 = select_ln45_12_fu_134_p3;

assign ap_return_3 = select_ln45_13_fu_152_p3;

assign ap_return_4 = select_ln45_14_fu_170_p3;

assign ap_return_5 = select_ln45_15_fu_188_p3;

assign ap_return_6 = select_ln45_16_fu_206_p3;

assign ap_return_7 = select_ln45_17_fu_224_p3;

assign ap_return_8 = select_ln45_18_fu_242_p3;

assign icmp_ln45_11_fu_106_p2 = (($signed(data_1_val) > $signed(11'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_12_fu_124_p2 = (($signed(data_6_val) > $signed(11'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_13_fu_142_p2 = (($signed(data_7_val) > $signed(11'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_14_fu_160_p2 = (($signed(data_22_val) > $signed(11'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_15_fu_178_p2 = (($signed(data_49_val) > $signed(11'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_16_fu_196_p2 = (($signed(data_55_val) > $signed(11'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_17_fu_214_p2 = (($signed(data_59_val) > $signed(11'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_18_fu_232_p2 = (($signed(data_63_val) > $signed(11'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_fu_88_p2 = (($signed(data_0_val) > $signed(11'd0)) ? 1'b1 : 1'b0);

endmodule //myproject_relu_ap_fixed_11_8_5_3_0_ap_ufixed_10_7_5_3_0_ReLU_config6_s
