-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_relu_ap_fixed_9_7_5_3_0_ap_ufixed_8_6_5_3_0_ReLU_config16_s is
port (
    ap_ready : OUT STD_LOGIC;
    data_12_val : IN STD_LOGIC_VECTOR (8 downto 0);
    data_27_val : IN STD_LOGIC_VECTOR (8 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_rst : IN STD_LOGIC );
end;


architecture behav of myproject_relu_ap_fixed_9_7_5_3_0_ap_ufixed_8_6_5_3_0_ReLU_config16_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal icmp_ln45_fu_32_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln46_fu_38_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln45_4_fu_50_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln46_4_fu_56_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln45_fu_42_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln45_4_fu_60_p3 : STD_LOGIC_VECTOR (7 downto 0);


begin



    ap_ready <= ap_const_logic_1;
    ap_return_0 <= select_ln45_fu_42_p3;
    ap_return_1 <= select_ln45_4_fu_60_p3;
    icmp_ln45_4_fu_50_p2 <= "1" when (signed(data_27_val) > signed(ap_const_lv9_0)) else "0";
    icmp_ln45_fu_32_p2 <= "1" when (signed(data_12_val) > signed(ap_const_lv9_0)) else "0";
    select_ln45_4_fu_60_p3 <= 
        trunc_ln46_4_fu_56_p1 when (icmp_ln45_4_fu_50_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln45_fu_42_p3 <= 
        trunc_ln46_fu_38_p1 when (icmp_ln45_fu_32_p2(0) = '1') else 
        ap_const_lv8_0;
    trunc_ln46_4_fu_56_p1 <= data_27_val(8 - 1 downto 0);
    trunc_ln46_fu_38_p1 <= data_12_val(8 - 1 downto 0);
end behav;
