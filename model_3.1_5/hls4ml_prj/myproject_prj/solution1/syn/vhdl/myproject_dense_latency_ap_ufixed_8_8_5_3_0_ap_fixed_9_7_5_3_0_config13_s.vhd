-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_dense_latency_ap_ufixed_8_8_5_3_0_ap_fixed_9_7_5_3_0_config13_s is
port (
    ap_ready : OUT STD_LOGIC;
    data_5_val : IN STD_LOGIC_VECTOR (6 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    ap_rst : IN STD_LOGIC );
end;


architecture behav of myproject_dense_latency_ap_ufixed_8_8_5_3_0_ap_fixed_9_7_5_3_0_config13_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv14_58 : STD_LOGIC_VECTOR (13 downto 0) := "00000001011000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv14_40 : STD_LOGIC_VECTOR (13 downto 0) := "00000001000000";
    constant ap_const_lv12_2A0 : STD_LOGIC_VECTOR (11 downto 0) := "001010100000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal mult_fu_125_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal mult_fu_125_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_20_fu_664_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal mult_fu_125_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln42_1_fu_672_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln58_fu_676_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_fu_688_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln58_fu_682_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln111_1_fu_702_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln111_fu_698_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln111_fu_712_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mult_fu_125_p00 : STD_LOGIC_VECTOR (13 downto 0);

    component myproject_mul_7ns_8ns_14_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;



begin
    mul_7ns_8ns_14_1_1_U22 : component myproject_mul_7ns_8ns_14_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 8,
        dout_WIDTH => 14)
    port map (
        din0 => mult_fu_125_p0,
        din1 => mult_fu_125_p1,
        dout => mult_fu_125_p2);




    add_ln58_fu_676_p2 <= std_logic_vector(unsigned(mult_fu_125_p2) + unsigned(ap_const_lv14_40));
    ap_ready <= ap_const_logic_1;
    ap_return_0 <= zext_ln111_fu_698_p1;
    ap_return_1 <= sext_ln111_fu_712_p1;
    mult_fu_125_p0 <= mult_fu_125_p00(7 - 1 downto 0);
    mult_fu_125_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(data_5_val),14));
    mult_fu_125_p1 <= ap_const_lv14_58(8 - 1 downto 0);
        sext_ln111_fu_712_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln111_1_fu_702_p4),9));

    sub_ln58_fu_682_p2 <= std_logic_vector(unsigned(ap_const_lv12_2A0) - unsigned(zext_ln42_1_fu_672_p1));
    tmp_20_fu_664_p3 <= (data_5_val & ap_const_lv4_0);
    tmp_fu_688_p4 <= add_ln58_fu_676_p2(13 downto 6);
    trunc_ln111_1_fu_702_p4 <= sub_ln58_fu_682_p2(11 downto 6);
    zext_ln111_fu_698_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_688_p4),9));
    zext_ln42_1_fu_672_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_20_fu_664_p3),12));
end behav;
