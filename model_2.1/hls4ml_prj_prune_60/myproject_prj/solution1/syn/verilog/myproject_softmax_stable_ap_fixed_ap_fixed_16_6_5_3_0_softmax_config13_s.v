// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config13_s (
        ap_clk,
        ap_rst,
        data_0_val,
        data_1_val,
        data_2_val,
        data_3_val,
        data_4_val,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [15:0] data_0_val;
input  [15:0] data_1_val;
input  [15:0] data_2_val;
input  [15:0] data_3_val;
input  [15:0] data_4_val;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;
output  [15:0] ap_return_3;
output  [15:0] ap_return_4;
input   ap_ce;

reg[15:0] ap_return_0;
reg[15:0] ap_return_1;
reg[15:0] ap_return_2;
reg[15:0] ap_return_3;
reg[15:0] ap_return_4;

wire   [9:0] exp_table_address0;
wire   [16:0] exp_table_q0;
wire   [9:0] exp_table_address1;
wire   [16:0] exp_table_q1;
wire   [9:0] exp_table_address2;
wire   [16:0] exp_table_q2;
wire   [9:0] exp_table_address3;
wire   [16:0] exp_table_q3;
wire   [9:0] exp_table_address4;
wire   [16:0] exp_table_q4;
wire   [9:0] invert_table_address0;
wire   [17:0] invert_table_q0;
reg  signed [15:0] data_4_val_read_reg_996;
wire    ap_block_pp0_stage0_11001;
reg  signed [15:0] data_3_val_read_reg_1003;
reg  signed [15:0] data_2_val_read_reg_1008;
reg  signed [15:0] data_1_val_read_reg_1013;
reg  signed [15:0] data_0_val_read_reg_1018;
wire   [15:0] select_ln66_2_fu_222_p3;
reg   [15:0] select_ln66_2_reg_1023;
reg   [16:0] exp_res_reg_1054;
reg   [16:0] exp_res_reg_1054_pp0_iter3_reg;
reg   [16:0] exp_res_1_reg_1059;
reg   [16:0] exp_res_1_reg_1059_pp0_iter3_reg;
reg   [16:0] exp_res_2_reg_1064;
reg   [16:0] exp_res_2_reg_1064_pp0_iter3_reg;
reg   [16:0] exp_res_3_reg_1069;
reg   [16:0] exp_res_3_reg_1069_pp0_iter3_reg;
reg   [16:0] exp_res_4_reg_1074;
reg   [16:0] exp_res_4_reg_1074_pp0_iter3_reg;
wire  signed [17:0] select_ln51_3_fu_742_p3;
reg  signed [17:0] select_ln51_3_reg_1081;
wire   [63:0] zext_ln255_fu_491_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln255_1_fu_522_p1;
wire   [63:0] zext_ln255_2_fu_553_p1;
wire   [63:0] zext_ln255_3_fu_584_p1;
wire   [63:0] zext_ln255_4_fu_615_p1;
wire   [63:0] zext_ln265_fu_862_p1;
reg    exp_table_ce4_local;
reg    exp_table_ce3_local;
reg    exp_table_ce2_local;
reg    exp_table_ce1_local;
reg    exp_table_ce0_local;
reg    invert_table_ce0_local;
wire  signed [15:0] icmp_ln66_fu_170_p0;
wire  signed [15:0] icmp_ln66_fu_170_p1;
wire   [0:0] icmp_ln66_fu_170_p2;
wire   [0:0] xor_ln66_fu_176_p2;
wire  signed [15:0] select_ln66_fu_182_p1;
wire  signed [15:0] select_ln66_fu_182_p2;
wire  signed [15:0] icmp_ln66_1_fu_190_p0;
wire  signed [15:0] icmp_ln66_1_fu_190_p1;
wire   [0:0] icmp_ln66_1_fu_190_p2;
wire   [0:0] xor_ln66_1_fu_196_p2;
wire  signed [15:0] select_ln66_1_fu_202_p1;
wire  signed [15:0] select_ln66_1_fu_202_p2;
wire   [15:0] select_ln66_fu_182_p3;
wire   [15:0] select_ln66_1_fu_202_p3;
wire   [0:0] icmp_ln66_2_fu_210_p2;
wire   [0:0] xor_ln66_2_fu_216_p2;
wire   [0:0] icmp_ln66_3_fu_230_p2;
wire   [0:0] xor_ln66_3_fu_234_p2;
wire   [15:0] x_max_fu_240_p3;
wire  signed [16:0] sext_ln245_fu_250_p1;
wire  signed [16:0] conv36_i_fu_246_p1;
wire   [16:0] sub_ln245_fu_253_p2;
wire   [0:0] tmp_fu_259_p3;
wire   [0:0] tmp_1_fu_267_p3;
wire   [0:0] xor_ln245_fu_275_p2;
wire  signed [16:0] sext_ln245_1_fu_293_p1;
wire   [16:0] sub_ln245_1_fu_296_p2;
wire   [0:0] tmp_2_fu_302_p3;
wire   [0:0] tmp_3_fu_310_p3;
wire   [0:0] xor_ln245_2_fu_318_p2;
wire  signed [16:0] sext_ln245_2_fu_336_p1;
wire   [16:0] sub_ln245_2_fu_339_p2;
wire   [0:0] tmp_4_fu_345_p3;
wire   [0:0] tmp_5_fu_353_p3;
wire   [0:0] xor_ln245_4_fu_361_p2;
wire  signed [16:0] sext_ln245_3_fu_379_p1;
wire   [16:0] sub_ln245_3_fu_382_p2;
wire   [0:0] tmp_6_fu_388_p3;
wire   [0:0] tmp_7_fu_396_p3;
wire   [0:0] xor_ln245_6_fu_404_p2;
wire  signed [16:0] sext_ln245_4_fu_422_p1;
wire   [16:0] sub_ln245_4_fu_425_p2;
wire   [0:0] tmp_8_fu_431_p3;
wire   [0:0] tmp_9_fu_439_p3;
wire   [0:0] xor_ln245_8_fu_447_p2;
wire   [0:0] and_ln245_fu_281_p2;
wire   [0:0] xor_ln245_1_fu_287_p2;
wire   [9:0] select_ln245_fu_465_p3;
wire   [9:0] tmp_s_fu_473_p4;
wire   [9:0] select_ln245_1_fu_483_p3;
wire   [0:0] and_ln245_1_fu_324_p2;
wire   [0:0] xor_ln245_3_fu_330_p2;
wire   [9:0] select_ln245_2_fu_496_p3;
wire   [9:0] tmp_10_fu_504_p4;
wire   [9:0] select_ln245_3_fu_514_p3;
wire   [0:0] and_ln245_2_fu_367_p2;
wire   [0:0] xor_ln245_5_fu_373_p2;
wire   [9:0] select_ln245_4_fu_527_p3;
wire   [9:0] tmp_11_fu_535_p4;
wire   [9:0] select_ln245_5_fu_545_p3;
wire   [0:0] and_ln245_3_fu_410_p2;
wire   [0:0] xor_ln245_7_fu_416_p2;
wire   [9:0] select_ln245_6_fu_558_p3;
wire   [9:0] tmp_12_fu_566_p4;
wire   [9:0] select_ln245_7_fu_576_p3;
wire   [0:0] and_ln245_4_fu_453_p2;
wire   [0:0] xor_ln245_9_fu_459_p2;
wire   [9:0] select_ln245_8_fu_589_p3;
wire   [9:0] tmp_13_fu_597_p4;
wire   [9:0] select_ln245_9_fu_607_p3;
wire   [17:0] zext_ln245_1_fu_624_p1;
wire   [17:0] zext_ln245_fu_620_p1;
wire   [17:0] add_ln51_fu_636_p2;
wire   [0:0] tmp_15_fu_642_p3;
wire   [17:0] zext_ln245_3_fu_632_p1;
wire   [17:0] zext_ln245_2_fu_628_p1;
wire   [17:0] add_ln51_1_fu_658_p2;
wire   [0:0] tmp_16_fu_664_p3;
wire  signed [17:0] select_ln51_fu_650_p3;
wire  signed [17:0] select_ln51_1_fu_672_p3;
wire  signed [18:0] sext_ln51_1_fu_684_p1;
wire  signed [18:0] sext_ln51_fu_680_p1;
wire   [18:0] add_ln51_3_fu_694_p2;
wire   [17:0] add_ln51_2_fu_688_p2;
wire   [0:0] tmp_17_fu_700_p3;
wire   [0:0] tmp_18_fu_708_p3;
wire   [0:0] xor_ln51_fu_716_p2;
wire   [0:0] and_ln51_fu_722_p2;
wire   [0:0] xor_ln51_1_fu_728_p2;
wire   [17:0] select_ln51_2_fu_734_p3;
wire   [17:0] zext_ln249_fu_750_p1;
wire  signed [18:0] sext_ln51_2_fu_753_p1;
wire   [18:0] zext_ln51_fu_756_p1;
wire   [18:0] add_ln51_5_fu_764_p2;
wire   [17:0] add_ln51_4_fu_759_p2;
wire   [0:0] tmp_19_fu_770_p3;
wire   [0:0] tmp_20_fu_778_p3;
wire   [0:0] xor_ln51_2_fu_786_p2;
wire   [0:0] xor_ln51_3_fu_798_p2;
wire   [0:0] xor_ln51_4_fu_810_p2;
wire   [0:0] and_ln51_1_fu_792_p2;
wire   [0:0] xor_ln51_5_fu_816_p2;
wire   [9:0] tmp_14_fu_828_p4;
wire   [0:0] and_ln51_2_fu_804_p2;
wire   [0:0] or_ln51_fu_822_p2;
wire   [9:0] select_ln51_4_fu_838_p3;
wire   [9:0] select_ln51_5_fu_846_p3;
wire   [9:0] empty_fu_854_p3;
wire  signed [17:0] mul_ln268_fu_874_p0;
wire  signed [25:0] sext_ln268_fu_867_p1;
wire   [16:0] mul_ln268_fu_874_p1;
wire   [25:0] mul_ln268_fu_874_p2;
wire  signed [17:0] mul_ln268_1_fu_893_p0;
wire   [16:0] mul_ln268_1_fu_893_p1;
wire   [25:0] mul_ln268_1_fu_893_p2;
wire  signed [17:0] mul_ln268_2_fu_912_p0;
wire   [16:0] mul_ln268_2_fu_912_p1;
wire   [25:0] mul_ln268_2_fu_912_p2;
wire  signed [17:0] mul_ln268_3_fu_931_p0;
wire   [16:0] mul_ln268_3_fu_931_p1;
wire   [25:0] mul_ln268_3_fu_931_p2;
wire  signed [17:0] mul_ln268_4_fu_950_p0;
wire   [16:0] mul_ln268_4_fu_950_p1;
wire   [25:0] mul_ln268_4_fu_950_p2;
reg    ap_ce_reg;
reg   [15:0] data_0_val_int_reg;
reg   [15:0] data_1_val_int_reg;
reg   [15:0] data_2_val_int_reg;
reg   [15:0] data_3_val_int_reg;
reg   [15:0] data_4_val_int_reg;
reg   [15:0] ap_return_0_int_reg;
reg   [15:0] ap_return_1_int_reg;
reg   [15:0] ap_return_2_int_reg;
reg   [15:0] ap_return_3_int_reg;
reg   [15:0] ap_return_4_int_reg;
wire   [25:0] mul_ln268_1_fu_893_p10;
wire   [25:0] mul_ln268_2_fu_912_p10;
wire   [25:0] mul_ln268_3_fu_931_p10;
wire   [25:0] mul_ln268_4_fu_950_p10;
wire   [25:0] mul_ln268_fu_874_p10;

myproject_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config13_s_exp_table_ROM_bkb #(
    .DataWidth( 17 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
exp_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(exp_table_address0),
    .ce0(exp_table_ce0_local),
    .q0(exp_table_q0),
    .address1(exp_table_address1),
    .ce1(exp_table_ce1_local),
    .q1(exp_table_q1),
    .address2(exp_table_address2),
    .ce2(exp_table_ce2_local),
    .q2(exp_table_q2),
    .address3(exp_table_address3),
    .ce3(exp_table_ce3_local),
    .q3(exp_table_q3),
    .address4(exp_table_address4),
    .ce4(exp_table_ce4_local),
    .q4(exp_table_q4)
);

myproject_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config13_s_invert_table_Rcud #(
    .DataWidth( 18 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
invert_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(invert_table_address0),
    .ce0(invert_table_ce0_local),
    .q0(invert_table_q0)
);

myproject_mul_18s_17ns_26_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_18s_17ns_26_1_0_U1060(
    .din0(mul_ln268_fu_874_p0),
    .din1(mul_ln268_fu_874_p1),
    .dout(mul_ln268_fu_874_p2)
);

myproject_mul_18s_17ns_26_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_18s_17ns_26_1_0_U1061(
    .din0(mul_ln268_1_fu_893_p0),
    .din1(mul_ln268_1_fu_893_p1),
    .dout(mul_ln268_1_fu_893_p2)
);

myproject_mul_18s_17ns_26_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_18s_17ns_26_1_0_U1062(
    .din0(mul_ln268_2_fu_912_p0),
    .din1(mul_ln268_2_fu_912_p1),
    .dout(mul_ln268_2_fu_912_p2)
);

myproject_mul_18s_17ns_26_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_18s_17ns_26_1_0_U1063(
    .din0(mul_ln268_3_fu_931_p0),
    .din1(mul_ln268_3_fu_931_p1),
    .dout(mul_ln268_3_fu_931_p2)
);

myproject_mul_18s_17ns_26_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_18s_17ns_26_1_0_U1064(
    .din0(mul_ln268_4_fu_950_p0),
    .din1(mul_ln268_4_fu_950_p1),
    .dout(mul_ln268_4_fu_950_p2)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_0_int_reg <= {{mul_ln268_fu_874_p2[25:10]}};
        ap_return_1_int_reg <= {{mul_ln268_1_fu_893_p2[25:10]}};
        ap_return_2_int_reg <= {{mul_ln268_2_fu_912_p2[25:10]}};
        ap_return_3_int_reg <= {{mul_ln268_3_fu_931_p2[25:10]}};
        ap_return_4_int_reg <= {{mul_ln268_4_fu_950_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        data_0_val_int_reg <= data_0_val;
        data_1_val_int_reg <= data_1_val;
        data_2_val_int_reg <= data_2_val;
        data_3_val_int_reg <= data_3_val;
        data_4_val_int_reg <= data_4_val;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        data_0_val_read_reg_1018 <= data_0_val_int_reg;
        data_1_val_read_reg_1013 <= data_1_val_int_reg;
        data_2_val_read_reg_1008 <= data_2_val_int_reg;
        data_3_val_read_reg_1003 <= data_3_val_int_reg;
        data_4_val_read_reg_996 <= data_4_val_int_reg;
        exp_res_1_reg_1059 <= exp_table_q3;
        exp_res_1_reg_1059_pp0_iter3_reg <= exp_res_1_reg_1059;
        exp_res_2_reg_1064 <= exp_table_q2;
        exp_res_2_reg_1064_pp0_iter3_reg <= exp_res_2_reg_1064;
        exp_res_3_reg_1069 <= exp_table_q1;
        exp_res_3_reg_1069_pp0_iter3_reg <= exp_res_3_reg_1069;
        exp_res_4_reg_1074 <= exp_table_q0;
        exp_res_4_reg_1074_pp0_iter3_reg <= exp_res_4_reg_1074;
        exp_res_reg_1054 <= exp_table_q4;
        exp_res_reg_1054_pp0_iter3_reg <= exp_res_reg_1054;
        select_ln51_3_reg_1081 <= select_ln51_3_fu_742_p3;
        select_ln66_2_reg_1023 <= select_ln66_2_fu_222_p3;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_0 = ap_return_0_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_0 = {{mul_ln268_fu_874_p2[25:10]}};
    end else begin
        ap_return_0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_1 = ap_return_1_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_1 = {{mul_ln268_1_fu_893_p2[25:10]}};
    end else begin
        ap_return_1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_2 = ap_return_2_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_2 = {{mul_ln268_2_fu_912_p2[25:10]}};
    end else begin
        ap_return_2 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_3 = ap_return_3_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_3 = {{mul_ln268_3_fu_931_p2[25:10]}};
    end else begin
        ap_return_3 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_4 = ap_return_4_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_4 = {{mul_ln268_4_fu_950_p2[25:10]}};
    end else begin
        ap_return_4 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        exp_table_ce0_local = 1'b1;
    end else begin
        exp_table_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        exp_table_ce1_local = 1'b1;
    end else begin
        exp_table_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        exp_table_ce2_local = 1'b1;
    end else begin
        exp_table_ce2_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        exp_table_ce3_local = 1'b1;
    end else begin
        exp_table_ce3_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        exp_table_ce4_local = 1'b1;
    end else begin
        exp_table_ce4_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        invert_table_ce0_local = 1'b1;
    end else begin
        invert_table_ce0_local = 1'b0;
    end
end

assign add_ln51_1_fu_658_p2 = (zext_ln245_3_fu_632_p1 + zext_ln245_2_fu_628_p1);

assign add_ln51_2_fu_688_p2 = ($signed(select_ln51_1_fu_672_p3) + $signed(select_ln51_fu_650_p3));

assign add_ln51_3_fu_694_p2 = ($signed(sext_ln51_1_fu_684_p1) + $signed(sext_ln51_fu_680_p1));

assign add_ln51_4_fu_759_p2 = ($signed(zext_ln249_fu_750_p1) + $signed(select_ln51_3_reg_1081));

assign add_ln51_5_fu_764_p2 = ($signed(sext_ln51_2_fu_753_p1) + $signed(zext_ln51_fu_756_p1));

assign add_ln51_fu_636_p2 = (zext_ln245_1_fu_624_p1 + zext_ln245_fu_620_p1);

assign and_ln245_1_fu_324_p2 = (xor_ln245_2_fu_318_p2 & tmp_3_fu_310_p3);

assign and_ln245_2_fu_367_p2 = (xor_ln245_4_fu_361_p2 & tmp_5_fu_353_p3);

assign and_ln245_3_fu_410_p2 = (xor_ln245_6_fu_404_p2 & tmp_7_fu_396_p3);

assign and_ln245_4_fu_453_p2 = (xor_ln245_8_fu_447_p2 & tmp_9_fu_439_p3);

assign and_ln245_fu_281_p2 = (xor_ln245_fu_275_p2 & tmp_1_fu_267_p3);

assign and_ln51_1_fu_792_p2 = (xor_ln51_2_fu_786_p2 & tmp_20_fu_778_p3);

assign and_ln51_2_fu_804_p2 = (xor_ln51_3_fu_798_p2 & tmp_19_fu_770_p3);

assign and_ln51_fu_722_p2 = (xor_ln51_fu_716_p2 & tmp_18_fu_708_p3);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign conv36_i_fu_246_p1 = $signed(x_max_fu_240_p3);

assign empty_fu_854_p3 = ((or_ln51_fu_822_p2[0:0] == 1'b1) ? select_ln51_4_fu_838_p3 : select_ln51_5_fu_846_p3);

assign exp_table_address0 = zext_ln255_4_fu_615_p1;

assign exp_table_address1 = zext_ln255_3_fu_584_p1;

assign exp_table_address2 = zext_ln255_2_fu_553_p1;

assign exp_table_address3 = zext_ln255_1_fu_522_p1;

assign exp_table_address4 = zext_ln255_fu_491_p1;

assign icmp_ln66_1_fu_190_p0 = data_2_val_int_reg;

assign icmp_ln66_1_fu_190_p1 = data_3_val_int_reg;

assign icmp_ln66_1_fu_190_p2 = (($signed(icmp_ln66_1_fu_190_p0) < $signed(icmp_ln66_1_fu_190_p1)) ? 1'b1 : 1'b0);

assign icmp_ln66_2_fu_210_p2 = (($signed(select_ln66_fu_182_p3) < $signed(select_ln66_1_fu_202_p3)) ? 1'b1 : 1'b0);

assign icmp_ln66_3_fu_230_p2 = (($signed(select_ln66_2_reg_1023) < $signed(data_4_val_read_reg_996)) ? 1'b1 : 1'b0);

assign icmp_ln66_fu_170_p0 = data_0_val_int_reg;

assign icmp_ln66_fu_170_p1 = data_1_val_int_reg;

assign icmp_ln66_fu_170_p2 = (($signed(icmp_ln66_fu_170_p0) < $signed(icmp_ln66_fu_170_p1)) ? 1'b1 : 1'b0);

assign invert_table_address0 = zext_ln265_fu_862_p1;

assign mul_ln268_1_fu_893_p0 = sext_ln268_fu_867_p1;

assign mul_ln268_1_fu_893_p1 = mul_ln268_1_fu_893_p10;

assign mul_ln268_1_fu_893_p10 = exp_res_1_reg_1059_pp0_iter3_reg;

assign mul_ln268_2_fu_912_p0 = sext_ln268_fu_867_p1;

assign mul_ln268_2_fu_912_p1 = mul_ln268_2_fu_912_p10;

assign mul_ln268_2_fu_912_p10 = exp_res_2_reg_1064_pp0_iter3_reg;

assign mul_ln268_3_fu_931_p0 = sext_ln268_fu_867_p1;

assign mul_ln268_3_fu_931_p1 = mul_ln268_3_fu_931_p10;

assign mul_ln268_3_fu_931_p10 = exp_res_3_reg_1069_pp0_iter3_reg;

assign mul_ln268_4_fu_950_p0 = sext_ln268_fu_867_p1;

assign mul_ln268_4_fu_950_p1 = mul_ln268_4_fu_950_p10;

assign mul_ln268_4_fu_950_p10 = exp_res_4_reg_1074_pp0_iter3_reg;

assign mul_ln268_fu_874_p0 = sext_ln268_fu_867_p1;

assign mul_ln268_fu_874_p1 = mul_ln268_fu_874_p10;

assign mul_ln268_fu_874_p10 = exp_res_reg_1054_pp0_iter3_reg;

assign or_ln51_fu_822_p2 = (xor_ln51_5_fu_816_p2 | and_ln51_1_fu_792_p2);

assign select_ln245_1_fu_483_p3 = ((xor_ln245_1_fu_287_p2[0:0] == 1'b1) ? select_ln245_fu_465_p3 : tmp_s_fu_473_p4);

assign select_ln245_2_fu_496_p3 = ((and_ln245_1_fu_324_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln245_3_fu_514_p3 = ((xor_ln245_3_fu_330_p2[0:0] == 1'b1) ? select_ln245_2_fu_496_p3 : tmp_10_fu_504_p4);

assign select_ln245_4_fu_527_p3 = ((and_ln245_2_fu_367_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln245_5_fu_545_p3 = ((xor_ln245_5_fu_373_p2[0:0] == 1'b1) ? select_ln245_4_fu_527_p3 : tmp_11_fu_535_p4);

assign select_ln245_6_fu_558_p3 = ((and_ln245_3_fu_410_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln245_7_fu_576_p3 = ((xor_ln245_7_fu_416_p2[0:0] == 1'b1) ? select_ln245_6_fu_558_p3 : tmp_12_fu_566_p4);

assign select_ln245_8_fu_589_p3 = ((and_ln245_4_fu_453_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln245_9_fu_607_p3 = ((xor_ln245_9_fu_459_p2[0:0] == 1'b1) ? select_ln245_8_fu_589_p3 : tmp_13_fu_597_p4);

assign select_ln245_fu_465_p3 = ((and_ln245_fu_281_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln51_1_fu_672_p3 = ((tmp_16_fu_664_p3[0:0] == 1'b1) ? 18'd131071 : add_ln51_1_fu_658_p2);

assign select_ln51_2_fu_734_p3 = ((and_ln51_fu_722_p2[0:0] == 1'b1) ? 18'd131071 : 18'd131072);

assign select_ln51_3_fu_742_p3 = ((xor_ln51_1_fu_728_p2[0:0] == 1'b1) ? select_ln51_2_fu_734_p3 : add_ln51_2_fu_688_p2);

assign select_ln51_4_fu_838_p3 = ((xor_ln51_4_fu_810_p2[0:0] == 1'b1) ? 10'd511 : tmp_14_fu_828_p4);

assign select_ln51_5_fu_846_p3 = ((and_ln51_2_fu_804_p2[0:0] == 1'b1) ? 10'd512 : tmp_14_fu_828_p4);

assign select_ln51_fu_650_p3 = ((tmp_15_fu_642_p3[0:0] == 1'b1) ? 18'd131071 : add_ln51_fu_636_p2);

assign select_ln66_1_fu_202_p1 = data_2_val_int_reg;

assign select_ln66_1_fu_202_p2 = data_3_val_int_reg;

assign select_ln66_1_fu_202_p3 = ((xor_ln66_1_fu_196_p2[0:0] == 1'b1) ? select_ln66_1_fu_202_p1 : select_ln66_1_fu_202_p2);

assign select_ln66_2_fu_222_p3 = ((xor_ln66_2_fu_216_p2[0:0] == 1'b1) ? select_ln66_fu_182_p3 : select_ln66_1_fu_202_p3);

assign select_ln66_fu_182_p1 = data_0_val_int_reg;

assign select_ln66_fu_182_p2 = data_1_val_int_reg;

assign select_ln66_fu_182_p3 = ((xor_ln66_fu_176_p2[0:0] == 1'b1) ? select_ln66_fu_182_p1 : select_ln66_fu_182_p2);

assign sext_ln245_1_fu_293_p1 = data_1_val_read_reg_1013;

assign sext_ln245_2_fu_336_p1 = data_2_val_read_reg_1008;

assign sext_ln245_3_fu_379_p1 = data_3_val_read_reg_1003;

assign sext_ln245_4_fu_422_p1 = data_4_val_read_reg_996;

assign sext_ln245_fu_250_p1 = data_0_val_read_reg_1018;

assign sext_ln268_fu_867_p1 = $signed(invert_table_q0);

assign sext_ln51_1_fu_684_p1 = select_ln51_1_fu_672_p3;

assign sext_ln51_2_fu_753_p1 = select_ln51_3_reg_1081;

assign sext_ln51_fu_680_p1 = select_ln51_fu_650_p3;

assign sub_ln245_1_fu_296_p2 = ($signed(sext_ln245_1_fu_293_p1) - $signed(conv36_i_fu_246_p1));

assign sub_ln245_2_fu_339_p2 = ($signed(sext_ln245_2_fu_336_p1) - $signed(conv36_i_fu_246_p1));

assign sub_ln245_3_fu_382_p2 = ($signed(sext_ln245_3_fu_379_p1) - $signed(conv36_i_fu_246_p1));

assign sub_ln245_4_fu_425_p2 = ($signed(sext_ln245_4_fu_422_p1) - $signed(conv36_i_fu_246_p1));

assign sub_ln245_fu_253_p2 = ($signed(sext_ln245_fu_250_p1) - $signed(conv36_i_fu_246_p1));

assign tmp_10_fu_504_p4 = {{sub_ln245_1_fu_296_p2[15:6]}};

assign tmp_11_fu_535_p4 = {{sub_ln245_2_fu_339_p2[15:6]}};

assign tmp_12_fu_566_p4 = {{sub_ln245_3_fu_382_p2[15:6]}};

assign tmp_13_fu_597_p4 = {{sub_ln245_4_fu_425_p2[15:6]}};

assign tmp_14_fu_828_p4 = {{add_ln51_4_fu_759_p2[17:8]}};

assign tmp_15_fu_642_p3 = add_ln51_fu_636_p2[32'd17];

assign tmp_16_fu_664_p3 = add_ln51_1_fu_658_p2[32'd17];

assign tmp_17_fu_700_p3 = add_ln51_3_fu_694_p2[32'd18];

assign tmp_18_fu_708_p3 = add_ln51_2_fu_688_p2[32'd17];

assign tmp_19_fu_770_p3 = add_ln51_5_fu_764_p2[32'd18];

assign tmp_1_fu_267_p3 = sub_ln245_fu_253_p2[32'd15];

assign tmp_20_fu_778_p3 = add_ln51_4_fu_759_p2[32'd17];

assign tmp_2_fu_302_p3 = sub_ln245_1_fu_296_p2[32'd16];

assign tmp_3_fu_310_p3 = sub_ln245_1_fu_296_p2[32'd15];

assign tmp_4_fu_345_p3 = sub_ln245_2_fu_339_p2[32'd16];

assign tmp_5_fu_353_p3 = sub_ln245_2_fu_339_p2[32'd15];

assign tmp_6_fu_388_p3 = sub_ln245_3_fu_382_p2[32'd16];

assign tmp_7_fu_396_p3 = sub_ln245_3_fu_382_p2[32'd15];

assign tmp_8_fu_431_p3 = sub_ln245_4_fu_425_p2[32'd16];

assign tmp_9_fu_439_p3 = sub_ln245_4_fu_425_p2[32'd15];

assign tmp_fu_259_p3 = sub_ln245_fu_253_p2[32'd16];

assign tmp_s_fu_473_p4 = {{sub_ln245_fu_253_p2[15:6]}};

assign x_max_fu_240_p3 = ((xor_ln66_3_fu_234_p2[0:0] == 1'b1) ? select_ln66_2_reg_1023 : data_4_val_read_reg_996);

assign xor_ln245_1_fu_287_p2 = (tmp_fu_259_p3 ^ tmp_1_fu_267_p3);

assign xor_ln245_2_fu_318_p2 = (tmp_2_fu_302_p3 ^ 1'd1);

assign xor_ln245_3_fu_330_p2 = (tmp_3_fu_310_p3 ^ tmp_2_fu_302_p3);

assign xor_ln245_4_fu_361_p2 = (tmp_4_fu_345_p3 ^ 1'd1);

assign xor_ln245_5_fu_373_p2 = (tmp_5_fu_353_p3 ^ tmp_4_fu_345_p3);

assign xor_ln245_6_fu_404_p2 = (tmp_6_fu_388_p3 ^ 1'd1);

assign xor_ln245_7_fu_416_p2 = (tmp_7_fu_396_p3 ^ tmp_6_fu_388_p3);

assign xor_ln245_8_fu_447_p2 = (tmp_8_fu_431_p3 ^ 1'd1);

assign xor_ln245_9_fu_459_p2 = (tmp_9_fu_439_p3 ^ tmp_8_fu_431_p3);

assign xor_ln245_fu_275_p2 = (tmp_fu_259_p3 ^ 1'd1);

assign xor_ln51_1_fu_728_p2 = (tmp_18_fu_708_p3 ^ tmp_17_fu_700_p3);

assign xor_ln51_2_fu_786_p2 = (tmp_19_fu_770_p3 ^ 1'd1);

assign xor_ln51_3_fu_798_p2 = (tmp_20_fu_778_p3 ^ 1'd1);

assign xor_ln51_4_fu_810_p2 = (tmp_20_fu_778_p3 ^ tmp_19_fu_770_p3);

assign xor_ln51_5_fu_816_p2 = (xor_ln51_4_fu_810_p2 ^ 1'd1);

assign xor_ln51_fu_716_p2 = (tmp_17_fu_700_p3 ^ 1'd1);

assign xor_ln66_1_fu_196_p2 = (icmp_ln66_1_fu_190_p2 ^ 1'd1);

assign xor_ln66_2_fu_216_p2 = (icmp_ln66_2_fu_210_p2 ^ 1'd1);

assign xor_ln66_3_fu_234_p2 = (icmp_ln66_3_fu_230_p2 ^ 1'd1);

assign xor_ln66_fu_176_p2 = (icmp_ln66_fu_170_p2 ^ 1'd1);

assign zext_ln245_1_fu_624_p1 = exp_table_q3;

assign zext_ln245_2_fu_628_p1 = exp_table_q2;

assign zext_ln245_3_fu_632_p1 = exp_table_q1;

assign zext_ln245_fu_620_p1 = exp_table_q4;

assign zext_ln249_fu_750_p1 = exp_res_4_reg_1074;

assign zext_ln255_1_fu_522_p1 = select_ln245_3_fu_514_p3;

assign zext_ln255_2_fu_553_p1 = select_ln245_5_fu_545_p3;

assign zext_ln255_3_fu_584_p1 = select_ln245_7_fu_576_p3;

assign zext_ln255_4_fu_615_p1 = select_ln245_9_fu_607_p3;

assign zext_ln255_fu_491_p1 = select_ln245_1_fu_483_p3;

assign zext_ln265_fu_862_p1 = empty_fu_854_p3;

assign zext_ln51_fu_756_p1 = exp_res_4_reg_1074;

endmodule //myproject_softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config13_s
